# [LISTA DE EXERCÍCIOS]

# NOTA: Nos exercícios com mais de uma solução, a solução fornecida por mim, haverá no início: minha_ ou meu_

# ---------- # ---------- # ---------- # ---------- # ---------- #

# Exercício 01: Crie um vetor com 30 números inteiros

vetor <- c(1:30)
vetor

# Exercício 02: Crie uma matriz com 4 linhas e 4 colunas preenchida com números inteiros

minha_matriz <- matrix(nrow = 4, ncol = 4, c(1:16))
minha_matriz

matriz <- matrix(c(1:16), nrow = 4, ncol = 4)
matriz

# Exercício 03: Crie uma lista unindo o vetor e matriz criados anteriormente

?list

minha_lista <- list(x = vetor, y = matriz)
minha_lista

lista <- list(vetor, matriz)
lista

# Exercício 04: Usando a função read.table() leia o arquivo do link abaixo para uma dataframe
# http://data.princeton.edu/wws509/datasets/effort.dat

?read.table

meu_dataframe_link <- data.frame(read.table('http://data.princeton.edu/wws509/datasets/effort.dat', header = TRUE))
meu_dataframe_link

dataframe_link <- data.frame(read.table('http://data.princeton.edu/wws509/datasets/effort.dat'))
dataframe_link

# Exercício 05: Transforme o dataframe anterior, em um dataframe nomeado com os seguintes labels:
# c("config", "esfc", "chang")

help(names)

names(dataframe_link) <- c("config", "esfc", "chang")
dataframe_link

# Exercício 06: Imprima na tela o dataframe iris, verifique quantas dimensões existem no dataframe iris e imprima um resumo do dataset

print(iris)
View(iris)
dim(iris)
summary(iris)

# Exercício 07: Crie um plot simples usando as duas primeiras colunas do dataframe iris

help(plot)

meu_plot <- plot(iris[1:2])
meu_plot

plot(iris$Sepal.Length, iris$Sepal.Width)

# Exercício 08: Usando a função subset, crie um novo dataframe com o conjunto de dados do dataframe iris em que Sepal.Length > 7
# Dica: consulte o help para aprender como usar a função subset()

help(subset)

meu_df_iris <- data.frame(iris)
meu_df_iris
subset(meu_df_iris, Sepal.Length > 7)

df_iris <- subset(iris, Sepal.Length > 7)
df_iris

# Exercícios 09 (Desafio): Crie um dataframe que seja cópia do dataframe iris e usando a função slice(), divida o dataframe em um subset de 15 linhas
# Dica 01: Você vai ter que instalar e carregar o pacote dplyr
# Dica 02: Consulte o help para aprender como usar a função slice()

install.packages("dplyr")
library(dplyr)
help("slice")

meu_df_copia_iris <- data.frame(iris)
meu_df_copia_iris
meu_df_copia_iris <- slice(meu_df_copia_iris, 1:15)
meu_df_copia_iris

df_copia_iris <- data.frame(iris)
df_copia_iris
slice(meu_df_copia_iris, 1:15)

# Exercícios 10: Use a função filter no seu novo dataframe criado no item anterior e retorne apenas valores em que Sepal.Length > 5
# Dica: Use o RSiteSearch para aprender como usar a função filter

RSiteSearch('filter')
filter(meu_df_copia_iris, Sepal.Length > 5)

# ---------- # ---------- # ---------- # ---------- # ---------- #